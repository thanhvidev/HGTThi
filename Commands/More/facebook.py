import discord
from discord.ext import commands
from discord import File
import aiohttp
import io
import re

class Facebook(commands.Cog):
    def __init__(self, client):
        self.client = client

    async def extract_facebook_video_url(self, page_url: str) -> str:
        """T·ª± ƒë·ªông theo d√µi redirect v√† l·∫•y link video t·ª´ HTML Facebook"""
        async with aiohttp.ClientSession() as session:
            async with session.get(page_url, headers={"User-Agent": "Mozilla/5.0"}, allow_redirects=True) as response:
                if response.status != 200:
                    return None
                final_url = str(response.url)
                html = await response.text()

        print(f"[DEBUG] Redirected to: {final_url}")

        # T√¨m link video SD v√† HD t·ª´ HTML
        hd_match = re.search(r'"playable_url_quality_hd":"(https:\\/\\/video.*?)"', html)
        sd_match = re.search(r'"playable_url":"(https:\\/\\/video.*?)"', html)

        def clean_url(raw):
            return raw.replace('\\u0025', '%').replace('\\', '')

        if hd_match:
            return clean_url(hd_match.group(1))
        elif sd_match:
            return clean_url(sd_match.group(1))
        return None

    async def download_video(self, url):
        """T·∫£i d·ªØ li·ªáu video t·ª´ URL"""
        async with aiohttp.ClientSession() as session:
            async with session.get(url, timeout=30) as response:
                if response.status != 200:
                    return None
                return await response.read()

    @commands.hybrid_command(name="fbauto", description="T·∫£i b·∫•t k·ª≥ video Facebook n√†o: post, story, reel, comment, ho·∫∑c link chia s·∫ª")
    @commands.cooldown(1, 4, commands.BucketType.user)
    async def fbauto(self, ctx, fb_link: str):
        await ctx.defer()
        loading = await ctx.reply("> üîÑ ƒêang x·ª≠ l√Ω link Facebook...")

        try:
            video_url = await self.extract_facebook_video_url(fb_link)
            if not video_url:
                await loading.edit(content="‚ùå Kh√¥ng t√¨m th·∫•y video trong li√™n k·∫øt n√†y.")
                return

            # T·∫£i video t·ª´ link ƒë√£ tr√≠ch xu·∫•t
            video_data = await self.download_video(video_url)
            if not video_data:
                await loading.edit(content="‚ùå Kh√¥ng th·ªÉ t·∫£i video t·ª´ link ƒë√£ t√¨m ƒë∆∞·ª£c.")
                return

            await loading.delete()

            # N·∫øu qu√° gi·ªõi h·∫°n Discord, g·ª≠i link thay v√¨ file
            if len(video_data) > 8 * 1024 * 1024:
                await ctx.send(f"‚ö†Ô∏è Video v∆∞·ª£t qu√° gi·ªõi h·∫°n g·ª≠i file c·ªßa Discord (>8MB).\nüîó B·∫°n c√≥ th·ªÉ t·∫£i video t·∫°i: {video_url}")
                return

            file = File(io.BytesIO(video_data), filename="facebook_video.mp4")
            await ctx.send(file=file)
            await ctx.message.delete()

        except Exception as e:
            print(f"[fbauto] Error: {e}")
            await loading.edit(content="‚ùå C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω video Facebook.")

async def setup(client):
    await client.add_cog(Facebook(client))
